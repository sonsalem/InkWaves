---
title: 8 CSS Tips and Tricks Every Web Developer Should Know
subTitle: >-
  Most underrated CSS properties that will help you to improve design skils and
  some useful CSS tricks to speed up coding session.
cover: /blogs/8-css-tips-and-tricks-every-web-developer-should-know/cover.png
author: salem-mamdouh
tags:
  - label: Next.ts
    color: '#64748b'
  - label: React.ts
    color: '#38bdf8'
---
State management is one of the most important concepts in React world. As React components
render and update, they rely on state to manage and reflect changes in data and Ul elements. While
Redux has dominated the state management landscape for years, developers are now seeking mor
straightforward and lightweight solutions like Zustand

```
import { create } from 'zustand';

// Define your store
const useBearStore = create((set) => ({
  bears: 0, // Initial state
  increasePopulation: () => set((state) => ({ bears: state.bears + 1 })), // Action to update state
  removeAllBears: () => set({ bears: 0 }), // Action to reset state
}));

// Usage in a React component
function BearCounter() {
  const bears = useBearStore((state) => state.bears); // Select a specific part of the state
  const increasePopulation = useBearStore((state) => state.increasePopulation); // Select an action

  return (
    <div>
      <h1>Bears: {bears}</h1>
      <button onClick={increasePopulation}>Add Bear</button>
    </div>
  );
}
```

## Why you should learn Zustand?

One or dustands standout reatures is is minimalist APi, cesioned to Streamine state manacement in.
keacr components. Creauno a custand store is as simole as callino a sinole tunction, passino al
function that defines the store's initial state and actions. Thanks to the underlying Immer library, the
state can be modified directly, eliminating the need for complex reducer functions
